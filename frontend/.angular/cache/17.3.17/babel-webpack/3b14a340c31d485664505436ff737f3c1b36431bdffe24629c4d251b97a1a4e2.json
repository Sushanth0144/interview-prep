{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { InterviewComponent } from './interview/interview.component';\nimport { TopicTabsComponent } from './topic-tabs/topic-tabs.component';\nimport { TopicQuestionsComponent } from './questions/topic-questions.component';\nimport { AuthGuard } from './auth.guard';\n// Admin components\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\nimport { AdminTopicsComponent } from './admin/admin-topics/admin-topics.component';\nimport { AdminQuestionsComponent } from './admin/admin-questions/admin-questions.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [\n// Public route\n{\n  path: '',\n  component: HomeComponent\n},\n// ===== Authenticated User Routes =====\n{\n  path: 'interview',\n  component: InterviewComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'topics',\n  component: TopicTabsComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'topics/:id',\n  component: TopicQuestionsComponent,\n  canActivate: [AuthGuard]\n},\n// ===== Admin Dashboard (Protected) =====\n{\n  path: 'admin',\n  component: AdminDashboardComponent,\n  canActivate: [AuthGuard],\n  children: [{\n    path: 'topics',\n    component: AdminTopicsComponent\n  }, {\n    path: 'questions',\n    component: AdminQuestionsComponent\n  }, {\n    path: '',\n    redirectTo: 'topics',\n    pathMatch: 'full'\n  } // default child\n  ]\n},\n// ===== Wildcard Redirect =====\n{\n  path: '**',\n  redirectTo: ''\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {\n    static {\n      this.ɵfac = function AppRoutingModule_Factory(t) {\n        return new (t || AppRoutingModule)();\n      };\n    }\n    static {\n      this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n        type: AppRoutingModule\n      });\n    }\n    static {\n      this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n        imports: [RouterModule.forRoot(routes), RouterModule]\n      });\n    }\n  }\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}