{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/admin.service\";\nfunction AdminQuestionsComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const topic_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", topic_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", topic_r1.name, \" \");\n  }\n}\nfunction AdminQuestionsComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"input\", 10);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AdminQuestionsComponent_div_9_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.newQuestion.text, $event) || (ctx_r2.newQuestion.text = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AdminQuestionsComponent_div_9_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addQuestion());\n    });\n    i0.ɵɵtext(3, \"Add Question\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.newQuestion.text);\n  }\n}\nfunction AdminQuestionsComponent_table_10_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\")(4, \"input\", 14);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AdminQuestionsComponent_table_10_tr_10_Template_input_ngModelChange_4_listener($event) {\n      const question_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      i0.ɵɵtwoWayBindingSet(question_r5.text, $event) || (question_r5.text = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AdminQuestionsComponent_table_10_tr_10_Template_button_click_6_listener() {\n      const question_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.updateQuestion(question_r5));\n    });\n    i0.ɵɵtext(7, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function AdminQuestionsComponent_table_10_tr_10_Template_button_click_8_listener() {\n      const question_r5 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.deleteQuestion(question_r5.id));\n    });\n    i0.ɵɵtext(9, \" Delete \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r5.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", question_r5.text);\n  }\n}\nfunction AdminQuestionsComponent_table_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 12)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Question Text\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, AdminQuestionsComponent_table_10_tr_10_Template, 10, 2, \"tr\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.questions);\n  }\n}\nfunction AdminQuestionsComponent_p_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 16);\n    i0.ɵɵtext(1, \" No questions yet for this topic.\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let AdminQuestionsComponent = /*#__PURE__*/(() => {\n  class AdminQuestionsComponent {\n    constructor(adminService) {\n      this.adminService = adminService;\n      this.topics = [];\n      this.questions = [];\n      this.selectedTopicId = '';\n      this.newQuestion = {\n        text: ''\n      };\n    }\n    ngOnInit() {\n      this.loadTopics();\n    }\n    // ✅ Load all topics\n    loadTopics() {\n      this.adminService.getTopics().subscribe({\n        next: data => this.topics = data,\n        error: err => console.error('Error loading topics:', err)\n      });\n    }\n    // ✅ Load questions for the selected topic\n    loadQuestions() {\n      if (!this.selectedTopicId) {\n        this.questions = [];\n        return;\n      }\n      this.adminService.getQuestionsByTopic(this.selectedTopicId).subscribe({\n        next: data => this.questions = data.questions,\n        error: err => console.error('Error loading questions:', err)\n      });\n    }\n    // ✅ Add a new question\n    addQuestion() {\n      if (!this.newQuestion.text.trim()) return;\n      this.adminService.addQuestion(this.selectedTopicId, {\n        text: this.newQuestion.text\n      }).subscribe({\n        next: () => {\n          this.newQuestion.text = '';\n          this.loadQuestions();\n        },\n        error: err => console.error('Error adding question:', err)\n      });\n    }\n    // ✅ Update an existing question\n    updateQuestion(question) {\n      if (!question.text.trim()) return;\n      this.adminService.updateQuestion(question.id, {\n        text: question.text\n      }).subscribe({\n        next: () => this.loadQuestions(),\n        error: err => console.error('Error updating question:', err)\n      });\n    }\n    // ✅ Delete a question\n    deleteQuestion(id) {\n      if (confirm('Are you sure you want to delete this question?')) {\n        this.adminService.deleteQuestion(id).subscribe({\n          next: () => this.loadQuestions(),\n          error: err => console.error('Error deleting question:', err)\n        });\n      }\n    }\n    static {\n      this.ɵfac = function AdminQuestionsComponent_Factory(t) {\n        return new (t || AdminQuestionsComponent)(i0.ɵɵdirectiveInject(i1.AdminService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AdminQuestionsComponent,\n        selectors: [[\"app-admin-questions\"]],\n        decls: 12,\n        vars: 5,\n        consts: [[1, \"topic-selector\"], [\"for\", \"topicSelect\"], [\"id\", \"topicSelect\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"add-question-form\", 4, \"ngIf\"], [\"class\", \"questions-table\", 4, \"ngIf\"], [\"class\", \"no-questions\", 4, \"ngIf\"], [3, \"value\"], [1, \"add-question-form\"], [\"name\", \"questionText\", \"placeholder\", \"Enter new question...\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"], [1, \"questions-table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngModelChange\", \"ngModel\"], [1, \"delete\", 3, \"click\"], [1, \"no-questions\"]],\n        template: function AdminQuestionsComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h2\");\n            i0.ɵɵtext(1, \"Manage Questions\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"div\", 0)(3, \"label\", 1);\n            i0.ɵɵtext(4, \"Select Topic:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"select\", 2);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AdminQuestionsComponent_Template_select_ngModelChange_5_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.selectedTopicId, $event) || (ctx.selectedTopicId = $event);\n              return $event;\n            });\n            i0.ɵɵlistener(\"change\", function AdminQuestionsComponent_Template_select_change_5_listener() {\n              return ctx.loadQuestions();\n            });\n            i0.ɵɵelementStart(6, \"option\", 3);\n            i0.ɵɵtext(7, \"-- Select --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(8, AdminQuestionsComponent_option_8_Template, 2, 2, \"option\", 4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(9, AdminQuestionsComponent_div_9_Template, 4, 1, \"div\", 5)(10, AdminQuestionsComponent_table_10_Template, 11, 1, \"table\", 6)(11, AdminQuestionsComponent_p_11_Template, 2, 0, \"p\", 7);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedTopicId);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngForOf\", ctx.topics);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.selectedTopicId);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.questions.length > 0);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.selectedTopicId && ctx.questions.length === 0);\n          }\n        },\n        styles: [\".topic-selector[_ngcontent-%COMP%]{margin-bottom:20px}.topic-selector[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{padding:6px;background:#222;color:#fff;border:1px solid #555;border-radius:4px;margin-left:10px}.add-question-form[_ngcontent-%COMP%]{display:flex;gap:10px;margin-bottom:20px}.add-question-form[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{flex:1;padding:.5rem;border-radius:4px;border:1px solid #555;background:#222;color:#fff}.add-question-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:.5rem 1rem;background:#3f51b5;border:none;color:#fff;border-radius:4px;cursor:pointer}.questions-table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;margin-top:20px}.questions-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .questions-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid #444;padding:8px;text-align:center}.questions-table[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:95%;background:#222;color:#fff;border:1px solid #555;padding:4px}.questions-table[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:2px;padding:4px 8px;border-radius:4px;border:none;cursor:pointer}.questions-table[_ngcontent-%COMP%]   .delete[_ngcontent-%COMP%]{background:#b71c1c;color:#fff}.no-questions[_ngcontent-%COMP%]{color:#aaa;margin-top:20px}\"]\n      });\n    }\n  }\n  return AdminQuestionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}