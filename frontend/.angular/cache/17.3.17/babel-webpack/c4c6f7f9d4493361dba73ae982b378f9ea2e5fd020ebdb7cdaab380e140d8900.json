{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nfunction LoginComponent_mat_error_8_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Username is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_8_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Username must be at least 6 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_8_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Username must contain only letters and numbers.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, LoginComponent_mat_error_8_span_1_Template, 2, 0, \"span\", 4)(2, LoginComponent_mat_error_8_span_2_Template, 2, 0, \"span\", 4)(3, LoginComponent_mat_error_8_span_3_Template, 2, 0, \"span\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.username == null ? null : ctx_r1.username.errors == null ? null : ctx_r1.username.errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.username == null ? null : ctx_r1.username.errors == null ? null : ctx_r1.username.errors[\"minlength\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.username == null ? null : ctx_r1.username.errors == null ? null : ctx_r1.username.errors[\"pattern\"]);\n  }\n}\nfunction LoginComponent_mat_error_13_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_13_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password must be at least 8 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_13_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password must include uppercase, lowercase, and a number.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, LoginComponent_mat_error_13_span_1_Template, 2, 0, \"span\", 4)(2, LoginComponent_mat_error_13_span_2_Template, 2, 0, \"span\", 4)(3, LoginComponent_mat_error_13_span_3_Template, 2, 0, \"span\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password == null ? null : ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password == null ? null : ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"minlength\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.password == null ? null : ctx_r1.password.errors == null ? null : ctx_r1.password.errors[\"pattern\"]);\n  }\n}\nfunction LoginComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(dialogRef, fb, authService) {\n      this.dialogRef = dialogRef;\n      this.fb = fb;\n      this.authService = authService;\n      this.error = '';\n      this.loginForm = this.fb.group({\n        username: ['', [Validators.required, Validators.minLength(6), Validators.pattern('^[a-zA-Z0-9]+$')]],\n        password: ['', [Validators.required, Validators.minLength(8), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9]).*$')]]\n      });\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        const {\n          username,\n          password\n        } = this.loginForm.value;\n        this.authService.login(username, password).subscribe({\n          next: () => this.dialogRef.close(),\n          error: err => this.error = err.error.message || 'Login failed.'\n        });\n      } else {\n        this.error = 'Please fix the form errors before submitting.';\n      }\n    }\n    get username() {\n      return this.loginForm.get('username');\n    }\n    get password() {\n      return this.loginForm.get('password');\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 22,\n        vars: 5,\n        consts: [[\"errorTemplate\", \"\"], [3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"formControlName\", \"username\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"class\", \"error\", 4, \"ngIf\"], [\"mat-button\", \"\", 3, \"click\"], [2, \"color\", \"red\"], [1, \"error\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"mat-dialog-content\")(1, \"h2\");\n            i0.ɵɵtext(2, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.onSubmit());\n            });\n            i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n            i0.ɵɵtext(6, \"Username\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 3);\n            i0.ɵɵtemplate(8, LoginComponent_mat_error_8_Template, 4, 3, \"mat-error\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"mat-form-field\", 2)(10, \"mat-label\");\n            i0.ɵɵtext(11, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 5);\n            i0.ɵɵtemplate(13, LoginComponent_mat_error_13_Template, 4, 3, \"mat-error\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"button\", 6);\n            i0.ɵɵtext(15, \" Login \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(16, LoginComponent_ng_template_16_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(18, LoginComponent_div_18_Template, 2, 1, \"div\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(19, \"mat-dialog-actions\")(20, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_20_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.dialogRef.close());\n            });\n            i0.ɵɵtext(21, \"Cancel\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", (ctx.username == null ? null : ctx.username.touched) && (ctx.username == null ? null : ctx.username.invalid));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.touched) && (ctx.password == null ? null : ctx.password.invalid));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.error && !ctx.loginForm);\n          }\n        },\n        dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i1.MatDialogActions, i1.MatDialogContent, i5.MatButton, i6.MatInput, i7.MatFormField, i7.MatLabel, i7.MatError],\n        styles: [\"mat-form-field[_ngcontent-%COMP%]{width:100%;margin-bottom:15px}.error[_ngcontent-%COMP%]{color:red;margin-bottom:15px}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}