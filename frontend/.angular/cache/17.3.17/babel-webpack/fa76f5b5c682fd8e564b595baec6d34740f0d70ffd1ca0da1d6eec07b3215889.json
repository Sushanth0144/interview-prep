{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n    canActivate(route) {\n      return this.authService.isLoggedIn().pipe(map(isLoggedIn => {\n        const requiresAdmin = route.routeConfig?.path?.startsWith('admin');\n        if (!isLoggedIn) {\n          // ðŸš« If not logged in, redirect to home\n          this.router.navigate(['/']);\n          return false;\n        }\n        if (requiresAdmin && !this.authService.isAdmin()) {\n          // ðŸš« Logged in but not admin trying to access /admin\n          alert('You do not have permission to access the Admin Dashboard.');\n          this.router.navigate(['/topics']); // redirect normal users to topics\n          return false;\n        }\n        return true; // âœ… Access granted\n      }));\n    }\n    static {\n      this.Éµfac = function AuthGuard_Factory(t) {\n        return new (t || AuthGuard)(i0.ÉµÉµinject(i1.AuthService), i0.ÉµÉµinject(i2.Router));\n      };\n    }\n    static {\n      this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n        token: AuthGuard,\n        factory: AuthGuard.Éµfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}