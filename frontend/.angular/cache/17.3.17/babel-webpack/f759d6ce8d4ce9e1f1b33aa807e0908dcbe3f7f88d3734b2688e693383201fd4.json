{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"../services/topic.service\";\nimport * as i4 from \"@angular/common\";\nfunction TopicQuestionsComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TopicQuestionsComponent_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.logout());\n    });\n    i0.ɵɵtext(1, \" Logout \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TopicQuestionsComponent_li_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 15)(1, \"span\", 16);\n    i0.ɵɵtext(2, \"\\u2753\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", question_r3, \" \");\n  }\n}\nexport let TopicQuestionsComponent = /*#__PURE__*/(() => {\n  class TopicQuestionsComponent {\n    constructor(route, authService, router, topicService) {\n      this.route = route;\n      this.authService = authService;\n      this.router = router;\n      this.topicService = topicService;\n      this.topic = null;\n      this.questions = [];\n      this.isLoggedIn = false;\n      // Subscribe to auth state\n      this.authService.isLoggedIn().subscribe(loggedIn => {\n        this.isLoggedIn = loggedIn;\n      });\n    }\n    ngOnInit() {\n      // Get topicId from URL, assuming route is like: /topics/:id\n      this.topicId = Number(this.route.snapshot.paramMap.get('id'));\n      if (!this.topicId) {\n        console.error('No topic ID found in route');\n        this.router.navigate(['/topics']);\n        return;\n      }\n      // Fetch topic with questions from backend\n      this.loadTopicData();\n    }\n    loadTopicData() {\n      this.topicService.getQuestions(this.topicId).subscribe({\n        next: data => {\n          this.topic = data.topic;\n          this.questions = data.questions;\n        },\n        error: err => {\n          console.error('Error loading topic data:', err);\n          this.topic = {\n            name: 'Unknown Topic',\n            description: 'No data available',\n            link: ''\n          };\n          this.questions = [];\n        }\n      });\n    }\n    goBack() {\n      this.router.navigate(['/topics']);\n    }\n    logout() {\n      this.authService.logout();\n      this.router.navigate(['/']);\n    }\n    static {\n      this.ɵfac = function TopicQuestionsComponent_Factory(t) {\n        return new (t || TopicQuestionsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.TopicService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: TopicQuestionsComponent,\n        selectors: [[\"app-topic-questions\"]],\n        decls: 24,\n        vars: 11,\n        consts: [[1, \"topic-container\"], [1, \"toolbar\"], [1, \"back-button\", 3, \"click\"], [\"class\", \"logout-button\", 3, \"click\", 4, \"ngIf\"], [1, \"topic-title\"], [1, \"content-box\"], [1, \"importance-section\"], [1, \"section-heading\"], [1, \"importance-text\"], [1, \"info-link\"], [\"target\", \"_blank\", 3, \"href\"], [1, \"questions-section\"], [1, \"question-list\"], [\"class\", \"question-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"logout-button\", 3, \"click\"], [1, \"question-item\"], [1, \"q-icon\"]],\n        template: function TopicQuestionsComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n            i0.ɵɵlistener(\"click\", function TopicQuestionsComponent_Template_button_click_2_listener() {\n              return ctx.goBack();\n            });\n            i0.ɵɵtext(3, \"\\u2190 Back\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(4, TopicQuestionsComponent_button_4_Template, 2, 0, \"button\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"h1\", 4);\n            i0.ɵɵtext(6);\n            i0.ɵɵpipe(7, \"titlecase\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\", 5)(9, \"section\", 6)(10, \"h2\", 7);\n            i0.ɵɵtext(11);\n            i0.ɵɵpipe(12, \"titlecase\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"p\", 8);\n            i0.ɵɵtext(14);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"p\", 9);\n            i0.ɵɵtext(16, \" Reference: \");\n            i0.ɵɵelementStart(17, \"a\", 10);\n            i0.ɵɵtext(18);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(19, \"section\", 11)(20, \"h2\", 7);\n            i0.ɵɵtext(21, \"Top Interview Questions\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(22, \"ul\", 12);\n            i0.ɵɵtemplate(23, TopicQuestionsComponent_li_23_Template, 4, 1, \"li\", 13);\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"Let's Learn \", i0.ɵɵpipeBind1(7, 7, ctx.topic), \"\");\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\"Why is \", i0.ɵɵpipeBind1(12, 9, ctx.topic), \" Important?\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.content.importance);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"href\", ctx.content.link, i0.ɵɵsanitizeUrl);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.content.link);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngForOf\", ctx.content.questions);\n          }\n        },\n        dependencies: [i4.NgForOf, i4.NgIf, i4.TitleCasePipe],\n        styles: [\".topic-container[_ngcontent-%COMP%]{min-height:100vh;background:linear-gradient(135deg,#1b1f3a,#121212);color:#fff;font-family:Segoe UI,sans-serif;padding:2rem;display:flex;flex-direction:column;align-items:center}.toolbar[_ngcontent-%COMP%]{width:100%;max-width:1200px;display:flex;justify-content:space-between;margin-bottom:1rem}.logout-button[_ngcontent-%COMP%], .back-button[_ngcontent-%COMP%]{background:#3f51b5;color:#fff;border:none;padding:.6rem 1.2rem;border-radius:6px;font-size:1rem;font-weight:500;cursor:pointer;transition:background-color .3s}.logout-button[_ngcontent-%COMP%]:hover, .back-button[_ngcontent-%COMP%]:hover{background:#5c6bc0}.topic-title[_ngcontent-%COMP%]{font-size:2.5rem;font-weight:700;text-align:center;margin-bottom:2rem;color:#fff;text-shadow:1px 1px 4px rgba(0,0,0,.5)}.content-box[_ngcontent-%COMP%]{background:#ffffff0f;padding:2rem;border-radius:12px;width:100%;max-width:1000px;box-shadow:0 8px 24px #0006}.section-heading[_ngcontent-%COMP%]{font-size:1.5rem;text-transform:uppercase;margin-bottom:1rem;border-left:5px solid #50e3c2;padding-left:10px}.importance-text[_ngcontent-%COMP%]{font-size:1.1rem;line-height:1.6;background:#ffffff0d;padding:1rem;border-radius:6px;margin-bottom:1.5rem;color:#ccc}.info-link[_ngcontent-%COMP%]{margin-bottom:2rem;font-size:1rem;color:#50e3c2}.info-link[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#50e3c2;text-decoration:underline}.question-list[_ngcontent-%COMP%]{list-style-type:none;padding:0;margin:0}.question-item[_ngcontent-%COMP%]{padding:.8rem 1rem;background:#ffffff14;margin-bottom:12px;border-radius:6px;display:flex;align-items:center;transition:background .3s ease}.question-item[_ngcontent-%COMP%]:hover{background:#ffffff1f}.q-icon[_ngcontent-%COMP%]{margin-right:10px;font-size:1.2rem;color:#fdd835}\"]\n      });\n    }\n  }\n  return TopicQuestionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}